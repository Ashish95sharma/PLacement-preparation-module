/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) 
    {
        ListNode* temp = head;
        ListNode* prev = NULL;
        int count = 0;


        while (temp != NULL)
        {
            count++;
            temp = temp->next;
        }

        if (count == 1 || count == 0)
        {
            return NULL;
        }

        if (n == count)
        {
            return head->next;
        }



        int diff = count - n;
        count = 0;
        temp = head;
        while (count != diff)
        {
            prev = temp;
            temp = temp->next;
            count++;
            if(count == diff)
            {
            prev->next=temp->next;
            }
        }
        return head;
    }

};
